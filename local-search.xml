<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>mini-L</title>
    <link href="/2024/06/19/mini-L/"/>
    <url>/2024/06/19/mini-L/</url>
    
    <content type="html"><![CDATA[<h1 id="mini-L-部分题目-longlongcall-bigbanana"><a href="#mini-L-部分题目-longlongcall-bigbanana" class="headerlink" title="mini-L 部分题目(longlongcall,bigbanana)"></a>mini-L 部分题目(longlongcall,bigbanana)</h1><h2 id="longlongcall"><a href="#longlongcall" class="headerlink" title="longlongcall"></a>longlongcall</h2><h3 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h3><p>64位 ELF 无壳<br><img src="/../res/mini-L_1.1.png"></p><p><img src="/../res/mini-L_1.2.png" alt="ida"><br>有大量类似这样反汇编失败的函数，是一个call&amp;ret类型的花指令,可以看出popfq和pushfq中间的才是有用的指令。</p><h3 id="exp"><a href="#exp" class="headerlink" title="exp"></a>exp</h3><p>将无关的指令nop掉</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><code class="hljs idapython">import idaapi<br>import idc<br>import idautils<br><br><br># Function to search for a byte pattern and return a list of addresses where the pattern is found<br>def find_pattern(pattern):<br>    ea = 0x11D9<br>    end_ea = 0x1E35<br>    addresses = []<br><br>    while ea != idc.BADADDR:<br>        ea = idc.find_binary(ea, end_ea, pattern, 16, idc.SEARCH_DOWN)<br>        if ea != idc.BADADDR:<br>            addresses.append(ea)<br>            ea += len(pattern.split())  # Move to the next position after the pattern length<br>    return addresses<br><br><br># Function to replace a range of bytes with NOP (0x90)<br>def nop_bytes(start_addr, length):<br>    for i in range(length):<br>        idc.patch_byte(start_addr + i, 0x90)  # Replace with NOP<br><br><br># Example usage<br>binary_pattern1 = &quot;E8 02 00 00 00 &quot;  # Example pattern to search (adjust this pattern as needed)<br><br>binary_pattern5 = &quot;C9 C3&quot;<br>binary_pattern2 = &quot;48 83 C4 08&quot;<br>binary_pattern3= &quot;9C&quot;<br>binary_pattern4 = &quot;9D&quot;<br><br><br># Search for the binary pattern<br>addresses = find_pattern(binary_pattern1)<br>print(addresses)<br>pattern_length = len(binary_pattern1.split())<br>for addr in addresses:<br>    nop_bytes(addr, pattern_length)<br><br>addresses = find_pattern(binary_pattern2)<br>print(addresses)<br>pattern_length = len(binary_pattern1.split())<br>for addr in addresses:<br>    nop_bytes(addr, pattern_length)<br><br>addresses = find_pattern(binary_pattern3)<br>print(addresses)<br>pattern_length = len(binary_pattern1.split())<br>for addr in addresses:<br>    nop_bytes(addr, pattern_length)<br><br>addresses = find_pattern(binary_pattern4)<br>print(addresses)<br>pattern_length = len(binary_pattern1.split())<br>for addr in addresses:<br>    nop_bytes(addr, pattern_length)<br><br>addresses = find_pattern(binary_pattern5)<br>print(addresses)<br>pattern_length = len(binary_pattern1.split())<br>for addr in addresses:<br>    nop_bytes(addr, pattern_length)<br><br><br></code></pre></td></tr></table></figure><p>reanalysis<br><img src="/../res/mini-L_1.3.png"><br><img src="/../res/mini_L_1.4.png"></p><p>脚本</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;string&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><br><span class="hljs-type">char</span> ida_chars[<span class="hljs-number">44</span>] =<br>&#123;<br>  <span class="hljs-number">-69</span>,<br>  <span class="hljs-number">-65</span>,<br>  <span class="hljs-number">-71</span>,<br>  <span class="hljs-number">-66</span>,<br>  <span class="hljs-number">-61</span>,<br>  <span class="hljs-number">-52</span>,<br>  <span class="hljs-number">-50</span>,<br>  <span class="hljs-number">-36</span>,<br>  <span class="hljs-number">-98</span>,<br>  <span class="hljs-number">-113</span>,<br>  <span class="hljs-number">-112</span>,<br>  <span class="hljs-number">-112</span>,<br>  <span class="hljs-number">-112</span>,<br>  <span class="hljs-number">-112</span>,<br>  <span class="hljs-number">-112</span>,<br>  <span class="hljs-number">-107</span>,<br>  <span class="hljs-number">-80</span>,<br>  <span class="hljs-number">-83</span>,<br>  <span class="hljs-number">-67</span>,<br>  <span class="hljs-number">-76</span>,<br>  <span class="hljs-number">-120</span>,<br>  <span class="hljs-number">-81</span>,<br>  <span class="hljs-number">-110</span>,<br>  <span class="hljs-number">-48</span>,<br>  <span class="hljs-number">-49</span>,<br>  <span class="hljs-number">-95</span>,<br>  <span class="hljs-number">-93</span>,<br>  <span class="hljs-number">-110</span>,<br>  <span class="hljs-number">-73</span>,<br>  <span class="hljs-number">-76</span>,<br>  <span class="hljs-number">-55</span>,<br>  <span class="hljs-number">-98</span>,<br>  <span class="hljs-number">-108</span>,<br>  <span class="hljs-number">-89</span>,<br>  <span class="hljs-number">-82</span>,<br>  <span class="hljs-number">-16</span>,<br>  <span class="hljs-number">-95</span>,<br>  <span class="hljs-number">-103</span>,<br>  <span class="hljs-number">-64</span>,<br>  <span class="hljs-number">-29</span>,<br>  <span class="hljs-number">-76</span>,<br>  <span class="hljs-number">-76</span>,<br>  <span class="hljs-number">-65</span>,<br>  <span class="hljs-number">-29</span><br>&#125;;<br><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br>    string flag = <span class="hljs-string">&quot;&quot;</span>;    <br>    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-built_in">sizeof</span>(ida_chars); i+=<span class="hljs-number">2</span>)&#123;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-type">char</span> a = <span class="hljs-number">33</span>; a &lt; <span class="hljs-number">127</span>; a++)&#123;<br>            <span class="hljs-keyword">for</span> (<span class="hljs-type">char</span> b = <span class="hljs-number">33</span>; b &lt; <span class="hljs-number">127</span>; b++)&#123;<br>                <span class="hljs-type">char</span> v2 = a+b;<br>                <span class="hljs-keyword">if</span>((a ^ v2) == ida_chars[i] &amp;&amp; (b^v2) == ida_chars[i+<span class="hljs-number">1</span>])&#123;<br>                    flag += a;<br>                    flag += b;<br>                   <br>                &#125;<br>    <br>            &#125;<br>        &#125;<br><br>    &#125;<br>    cout &lt;&lt; flag &lt;&lt; endl;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br><br>&#125;<br><br><br></code></pre></td></tr></table></figure><h2 id="bigbanana"><a href="#bigbanana" class="headerlink" title="bigbanana"></a>bigbanana</h2><h3 id="分析-1"><a href="#分析-1" class="headerlink" title="分析"></a>分析</h3><p>64位 无壳</p><p><img src="/../res/minil2.1.png" alt="ida"><br>很明显是一个VM的题目，先将指令都翻译成汇编指令，然后根据<br>op把指令提取出来。这里的op要改成dd的形式导出</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br></pre></td><td class="code"><pre><code class="hljs op">int instrction[] =<br>&#123;<br>   246, 108, 246, 102, 246, 71, 246, 102, 246, 13, 246<br>,102, 246, 5, 246, 102, 246, 19, 246, 102, 246, 10, 246<br>,102, 246, 70, 246, 102, 246, 2, 246, 102, 246, 9, 246<br>,102, 246, 9, 246, 102, 246, 1, 246, 102, 246, 74, 246<br>,102, 246, 21, 246, 102, 246, 3, 246, 102, 246, 18, 246<br>,102, 246, 19, 246, 102, 246, 8, 246, 102, 246, 15, 246<br>,102, 246, 11, 246, 102, 246, 70, 246, 102, 246, 3, 246<br>,102, 246, 3, 246, 102, 246, 20, 246, 102, 246, 14, 246<br>,102, 246, 18, 246, 102, 246, 70, 246, 102, 246, 20<br>,246, 102, 246, 9, 246, 102, 246, 0, 246, 102, 246, 70<br>,246, 102, 246, 2, 246, 102, 246, 3, 246, 102, 246, 21<br>,246, 102, 246, 21, 246, 102, 246, 3, 246, 102, 246<br>,20, 246, 102, 246, 22, 246, 102, 246, 70, 246, 102<br>,246, 2, 246, 102, 246, 20, 246, 102, 246, 7, 246, 102<br>,246, 14, 246, 102, 246, 70, 246, 102, 246, 3, 246, 102<br>,246, 4, 246, 102, 246, 70, 246, 102, 246, 10, 246, 102<br>,246, 10, 246, 102, 246, 15, 246, 102, 246, 17, 246<br>,102, 246, 70, 246, 102, 246, 19, 246, 102, 246, 9, 246<br>,102, 246, 31, 246, 102, 246, 70, 246, 102, 246, 74<br>,246, 102, 246, 31, 246, 102, 246, 10, 246, 102, 246<br>,18, 246, 102, 246, 5, 246, 102, 246, 3, 246, 102, 246<br>,20, 246, 102, 246, 20, 246, 102, 246, 9, 246, 102, 246<br>,5, 246, 102, 246, 8, 246, 102, 246, 15, 246, 102, 246<br>,70, 246, 102, 246, 1, 246, 102, 246, 7, 246, 102, 246<br>,10, 246, 102, 246, 0, 246, 102, 246, 70, 246, 102, 246<br>,3, 246, 102, 246, 14, 246, 102, 246, 18, 246, 102, 246<br>,70, 246, 102, 246, 20, 246, 102, 246, 3, 246, 102, 246<br>,17, 246, 102, 246, 21, 246, 102, 246, 8, 246, 102, 246<br>,7, 246, 102, 246, 70, 246, 102, 246, 19, 246, 102, 246<br>,9, 246, 102, 246, 31, 246, 102, 246, 70, 246, 102, 246<br>,0, 246, 102, 246, 47, 246, 102, 247, 248, 243, 17, 247<br>,248, 243, 17, 247, 248, 243, 17, 247, 248, 243, 17<br>,247, 248, 243, 17, 247, 248, 243, 17, 247, 248, 243<br>,17, 247, 248, 243, 17, 247, 248, 243, 17, 247, 248<br>,243, 17, 247, 248, 243, 17, 247, 248, 243, 17, 247<br>,248, 243, 17, 247, 248, 243, 17, 247, 248, 243, 17<br>,247, 248, 243, 17, 247, 248, 243, 17, 247, 248, 243<br>,17, 247, 248, 243, 17, 247, 248, 243, 17, 247, 248<br>,243, 17, 247, 248, 243, 17, 247, 248, 243, 17, 247<br>,248, 243, 17, 247, 248, 243, 17, 247, 248, 243, 17<br>,247, 248, 243, 17, 247, 248, 243, 17, 247, 248, 243<br>,17, 247, 248, 243, 17, 247, 248, 243, 17, 247, 248<br>,243, 17, 247, 248, 243, 17, 247, 248, 243, 17, 247<br>,248, 243, 17, 247, 248, 243, 17, 247, 248, 243, 17<br>,247, 248, 243, 17, 247, 248, 243, 17, 247, 248, 243<br>,17, 247, 248, 243, 17, 247, 248, 243, 17, 247, 248<br>,243, 17, 247, 248, 243, 17, 247, 248, 243, 17, 247<br>,248, 243, 17, 247, 248, 243, 17, 247, 248, 243, 17<br>,247, 248, 243, 17, 247, 248, 243, 17, 247, 248, 243<br>,17, 247, 248, 243, 17, 247, 248, 243, 17, 247, 248<br>,243, 17, 247, 248, 243, 17, 247, 248, 243, 17, 247<br>,248, 243, 17, 247, 248, 243, 17, 247, 248, 243, 17<br>,247, 248, 243, 17, 247, 248, 243, 17, 247, 248, 243<br>,17, 247, 248, 243, 17, 247, 248, 243, 17, 247, 248<br>,243, 17, 247, 248, 243, 17, 247, 248, 243, 17, 247<br>,248, 243, 17, 247, 248, 243, 17, 247, 248, 243, 17<br>,247, 248, 243, 17, 247, 248, 243, 17, 247, 248, 243<br>,17, 247, 248, 243, 17, 247, 248, 243, 17, 247, 248<br>,243, 17, 247, 248, 243, 17, 247, 248, 243, 17, 247<br>,248, 243, 17, 247, 248, 243, 17, 247, 248, 243, 17<br>,247, 248, 243, 17, 247, 248, 243, 17, 247, 248, 243<br>,17, 247, 248, 243, 17, 247, 248, 243, 17, 247, 248<br>,243, 17, 247, 248, 243, 17, 247, 248, 243, 17, 247<br>,248, 243, 17, 16, 16, 248, 247, 244, 1766746445, 1<br>,1952656716, 244, 0, 243, 242, 489505807, 254, 102, 240<br>,16, 248, 244, 22, 1, 33, 244, 1131796, 243, 242, 1953788496<br>,254, 102, 240, 16, 248, 244, 33, 1, 44, 244, 2263592<br>,243, 242, 2263629, 254, 102, 240, 16, 248, 244, 44<br>,1, 11, 244, 3395388, 243, 242, 3395498, 254, 102, 240<br>,16, 248, 244, 11, 1, 22, 244, 4527184, 243, 242, 4527307<br>,254, 102, 240, 16, 248, 244, 22, 1, 33, 244, 5658980<br>,243, 242, 5658982, 254, 102, 240, 16, 248, 244, 33<br>,1, 44, 244, 6790776, 243, 242, 6791100, 254, 102, 240<br>,16, 248, 244, 44, 1, 11, 244, 7922572, 243, 242, 7922892<br>,254, 102, 240, 16, 248, 244, 11, 1, 22, 244, 9054368<br>,243, 242, 9054537, 254, 102, 240, 16, 248, 244, 22<br>,1, 33, 244, 10186164, 243, 242, 10186440, 254, 102<br>,240, 16, 248, 244, 33, 1, 44, 244, 11317960, 243, 242<br>,11318240, 254, 102, 240, 16, 248, 244, 44, 1, 11, 244<br>,12449756, 243, 242, 12450038, 254, 102, 240, 16, 248<br>,244, 11, 1, 22, 244, 13581552, 243, 242, 13581602, 254<br>,102, 240, 16, 248, 244, 22, 1, 33, 244, 14713348, 243<br>,242, 14713579, 254, 102, 240, 16, 248, 244, 33, 1, 44<br>,244, 15845144, 243, 242, 15845189, 254, 102, 240, 16<br>,248, 244, 44, 1, 11, 244, 16976940, 243, 242, 16977052<br>,254, 102, 240, 16, 248, 244, 11, 1, 22, 244, 18108736<br>,243, 242, 18108814, 254, 102, 240, 16, 248, 244, 22<br>,1, 33, 244, 19240532, 243, 242, 19240500, 254, 102<br>,240, 16, 248, 244, 33, 1, 44, 244, 20372328, 243, 242<br>,20372636, 254, 102, 240, 16, 248, 244, 44, 1, 11, 244<br>,21504124, 243, 242, 21504381, 254, 102, 240, 16, 248<br>,244, 11, 1, 22, 244, 22635920, 243, 242, 22635950, 254<br>,102, 240, 16, 248, 244, 22, 1, 33, 244, 23767716, 243<br>,242, 23767992, 254, 102, 240, 16, 248, 244, 33, 1, 44<br>,244, 24899512, 243, 242, 24899631, 254, 102, 240, 16<br>,248, 244, 44, 1, 11, 244, 26031308, 243, 242, 26031402<br>,254, 102, 240, 16, 248, 244, 11, 1, 22, 244, 27163104<br>,243, 242, 27163367, 254, 102, 240, 16, 248, 244, 22<br>,1, 33, 244, 28294900, 243, 242, 28294937, 254, 102<br>,240, 16, 248, 244, 33, 1, 44, 244, 29426696, 243, 242<br>,29426748, 254, 102, 240, 16, 248, 244, 44, 1, 11, 244<br>,30558492, 243, 242, 30558628, 254, 102, 240, 16, 248<br>,244, 11, 1, 22, 244, 31690288, 243, 242, 31690302, 254<br>,102, 240, 16, 248, 244, 22, 1, 33, 244, 32822084, 243<br>,242, 32822192, 254, 102, 240, 16, 248, 244, 33, 1, 44<br>,244, 33953880, 243, 242, 33953875, 254, 102, 240, 16<br>,248, 244, 44, 1, 11, 244, 35085676, 243, 242, 35085942<br>,254, 102, 240, 16, 248, 244, 11, 1, 22, 244, 36217472<br>,243, 242, 36217409, 254, 102, 240, 16, 248, 244, 22<br>,1, 33, 244, 37349268, 243, 242, 37349478, 254, 102<br>,240, 16, 248, 244, 33, 1, 44, 244, 38481064, 243, 242<br>,38481281, 254, 102, 240, 16, 248, 244, 44, 1, 11, 244<br>,39612860, 243, 242, 39613168, 254, 102, 240, 16, 248<br>,244, 11, 1, 22, 244, 40744656, 243, 242, 40744760, 254<br>,102, 240, 16, 248, 244, 22, 1, 33, 244, 41876452, 243<br>,242, 41876732, 254, 102, 240, 16, 248, 244, 33, 1, 44<br>,244, 43008248, 243, 242, 43008497, 254, 102, 240, 16<br>,248, 244, 44, 1, 11, 244, 44140044, 243, 242, 44140263<br>,254, 102, 240, 16, 248, 244, 11, 1, 22, 244, 45271840<br>,243, 242, 45272035, 254, 102, 240, 16, 248, 244, 22<br>,1, 33, 244, 46403636, 243, 242, 46403677, 254, 102<br>,240, 16, 248, 244, 33, 1, 44, 244, 47535432, 243, 242<br>,47535509, 254, 102, 240, 16, 248, 244, 44, 1, 11, 244<br>,48667228, 243, 242, 48667259, 254, 102, 240, 0<br>&#125;;<br></code></pre></td></tr></table></figure><p>翻译脚本(这个把ida复制过来稍微改一改就行)</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">trans</span><span class="hljs-params">()</span></span>&#123;<br>    <span class="hljs-type">int</span>* op = instrction;<br>    <span class="hljs-keyword">while</span>(*op)&#123;<br>        NEXT:<br>            <br>            <br>            <span class="hljs-type">int</span> v11 = *op;<br>            <span class="hljs-type">int</span> i;<br>            <span class="hljs-keyword">switch</span>(--v11)&#123;<br>                <span class="hljs-keyword">case</span> <span class="hljs-number">0</span>:<br>                    i = *(op + <span class="hljs-number">1</span>);<br>                    <br>                    <br>                    cout &lt;&lt; <span class="hljs-string">&quot;add v6 &quot;</span> &lt;&lt; i &lt;&lt; endl;<br>                    op += <span class="hljs-number">2</span>;<br>                    <span class="hljs-keyword">break</span>;<br>                <span class="hljs-keyword">case</span> <span class="hljs-number">15</span>:<br>                   <br>                    <span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;push gatchar()&quot;</span>);<br>                    op += <span class="hljs-number">1</span>;<br>                    <span class="hljs-keyword">break</span>;<br>                <span class="hljs-keyword">case</span> <span class="hljs-number">16</span>:<br>                    <span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;printf()&quot;</span>);<br>                    op += <span class="hljs-number">1</span>;<br>                    <span class="hljs-keyword">break</span>;<br>                <span class="hljs-keyword">case</span> <span class="hljs-number">239</span>:<br>                    <span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;mov v5 v6&quot;</span>);<br>                    op += <span class="hljs-number">1</span>;<br>                    <span class="hljs-keyword">break</span>;<br>                <span class="hljs-keyword">case</span> <span class="hljs-number">240</span>:<br>                    <br>                    <span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;mov v8 v6&quot;</span>);<br>                    op += <span class="hljs-number">1</span>;<br>                    <span class="hljs-keyword">break</span>;<br>                <span class="hljs-keyword">case</span> <span class="hljs-number">241</span>:<br>                    <br>                    <br>                    i = *(op + <span class="hljs-number">1</span>);<br>                    <br>                    <br>                    cout &lt;&lt; <span class="hljs-string">&quot;cmp v5 &quot;</span> &lt;&lt; i &lt;&lt; endl;<br>                    op += <span class="hljs-number">2</span>;<br>                    <span class="hljs-keyword">break</span>;<br>                <span class="hljs-keyword">case</span> <span class="hljs-number">242</span>:<br>                    <br>                    <span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;xor v5 v6&quot;</span>);<br>                    op += <span class="hljs-number">1</span>;<br>                    <span class="hljs-keyword">break</span>;<br>                <span class="hljs-keyword">case</span> <span class="hljs-number">243</span>:<br>                    <br>                    <br>                    <br>                    <br>                    <br>                    cout &lt;&lt; <span class="hljs-string">&quot;add v5 &quot;</span> &lt;&lt; *(op + <span class="hljs-number">1</span>)&lt;&lt; endl;<br>                    op += <span class="hljs-number">2</span>;<br>                    <span class="hljs-keyword">break</span>;<br>                <span class="hljs-keyword">case</span> <span class="hljs-number">244</span>:<br>                    <br>                    <br>                    cout &lt;&lt; <span class="hljs-string">&quot;add v5 &quot;</span> &lt;&lt; *(op + <span class="hljs-number">1</span>)  &lt;&lt; *(op+<span class="hljs-number">2</span>) &lt;&lt;endl;<br>                    op += <span class="hljs-number">12</span>;<br>                    <span class="hljs-keyword">break</span>;<br>                <span class="hljs-keyword">case</span> <span class="hljs-number">245</span>:<br>                    <br>                    <br>                    cout &lt;&lt; <span class="hljs-string">&quot;push&quot;</span> &lt;&lt; *(op + <span class="hljs-number">1</span>)&lt;&lt; endl;<br>                    op += <span class="hljs-number">2</span>;<br>                    <span class="hljs-keyword">break</span>;<br>                <span class="hljs-keyword">case</span> <span class="hljs-number">246</span>:<br>                    <br>                    <span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;pop v5&quot;</span>);<br>                    op += <span class="hljs-number">1</span>;<br>                    <span class="hljs-keyword">break</span>;<br>                <span class="hljs-keyword">case</span> <span class="hljs-number">247</span>:<br>                    <br>                    <span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;pop v6&quot;</span>);<br>                    op += <span class="hljs-number">1</span>;<br>                    <span class="hljs-keyword">break</span>;<br>                <span class="hljs-keyword">case</span> <span class="hljs-number">248</span>:<br>                    <span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;pop v7&quot;</span>);<br>                    op += <span class="hljs-number">1</span>;<br>                    <span class="hljs-keyword">break</span>;<br>                <span class="hljs-keyword">case</span> <span class="hljs-number">249</span>:<br>                    <span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;pop v8&quot;</span>);<br>                    op += <span class="hljs-number">1</span>;<br>                    <span class="hljs-keyword">break</span>;<br>                <span class="hljs-keyword">case</span> <span class="hljs-number">253</span>:<br>                    <br>                    <span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;big启动&quot;</span>);<br>                    op += <span class="hljs-number">2</span>;<br>                    <span class="hljs-keyword">break</span>;<br>                <span class="hljs-keyword">case</span> <span class="hljs-number">254</span>:<br>                    <span class="hljs-built_in">puts</span>(<span class="hljs-string">&quot;je op+ $0&quot;</span>);<br>                    <br>                    op += <span class="hljs-number">2</span>;<br>                    <span class="hljs-keyword">break</span>;<br>                <span class="hljs-keyword">default</span>:<br>                    <span class="hljs-keyword">goto</span> NEXT;<br>            &#125;<br><br>    &#125;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>&#123;<br>    <span class="hljs-built_in">trans</span>();<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>提取出来的汇编<br>前面一大堆push和pop不用管<br>除了前两个字符不太一样，后面的都是一样的</p><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs armasm"><span class="hljs-keyword">push</span> gatchar()<br><span class="hljs-keyword">push</span> gatchar()<br><span class="hljs-keyword">pop</span> <span class="hljs-built_in">v6</span><br><span class="hljs-keyword">pop</span> <span class="hljs-built_in">v5</span><br><span class="hljs-keyword">add</span> <span class="hljs-built_in">v5</span> <span class="hljs-number">1766746445</span><br><span class="hljs-keyword">add</span> <span class="hljs-built_in">v6</span> <span class="hljs-number">1952656716</span><br><span class="hljs-keyword">add</span> <span class="hljs-built_in">v5</span> <span class="hljs-number">0</span><br><span class="hljs-symbol">xor</span> <span class="hljs-built_in">v5</span> <span class="hljs-built_in">v6</span><br><span class="hljs-keyword">cmp</span> <span class="hljs-built_in">v5</span> <span class="hljs-number">489505807</span><br><span class="hljs-symbol">big</span>启动<br><br><span class="hljs-keyword">mov</span> <span class="hljs-built_in">v5</span> <span class="hljs-built_in">v6</span><br><span class="hljs-keyword">push</span> gatchar()<br><span class="hljs-keyword">pop</span> <span class="hljs-built_in">v6</span><br><span class="hljs-keyword">add</span> <span class="hljs-built_in">v5</span> <span class="hljs-number">22</span><br><span class="hljs-keyword">add</span> <span class="hljs-built_in">v6</span> <span class="hljs-number">33</span><br><span class="hljs-keyword">add</span> <span class="hljs-built_in">v5</span> <span class="hljs-number">1131796</span><br><span class="hljs-symbol">xor</span> <span class="hljs-built_in">v5</span> <span class="hljs-built_in">v6</span><br><span class="hljs-keyword">cmp</span> <span class="hljs-built_in">v5</span> <span class="hljs-number">1953788496</span><br><span class="hljs-symbol">big</span>启动<br></code></pre></td></tr></table></figure><p>可以先用‘m’ 和 ‘i’ 验证一下，然后把数据提取出来爆破就行。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-comment">/*</span><br><span class="hljs-comment">add v5 1766746445</span><br><span class="hljs-comment">add v6 1952656716</span><br><span class="hljs-comment">add v5 0</span><br><span class="hljs-comment">xor v5 v6</span><br><span class="hljs-comment">cmp v5 489505807</span><br><span class="hljs-comment">big启动</span><br><span class="hljs-comment">*/</span><br><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;vector&gt;</span></span><br><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><br>vector&lt;vector&lt;<span class="hljs-type">int</span>&gt;&gt; data_ = &#123;<br>         &#123;<span class="hljs-number">22</span>, <span class="hljs-number">33</span>, <span class="hljs-number">1131796</span>, <span class="hljs-number">1953788496</span>&#125;,<br>        &#123;<span class="hljs-number">33</span>, <span class="hljs-number">44</span>, <span class="hljs-number">2263592</span>, <span class="hljs-number">2263629</span>&#125;,<br>        &#123;<span class="hljs-number">44</span>, <span class="hljs-number">11</span>, <span class="hljs-number">3395388</span>, <span class="hljs-number">3395498</span>&#125;,<br>        &#123;<span class="hljs-number">11</span>, <span class="hljs-number">22</span>, <span class="hljs-number">4527184</span>, <span class="hljs-number">4527307</span>&#125;,<br>        &#123;<span class="hljs-number">22</span>, <span class="hljs-number">33</span>, <span class="hljs-number">5658980</span>, <span class="hljs-number">5658982</span>&#125;,<br>        &#123;<span class="hljs-number">33</span>, <span class="hljs-number">44</span>, <span class="hljs-number">6790776</span>, <span class="hljs-number">6791100</span>&#125;,<br>        &#123;<span class="hljs-number">44</span>, <span class="hljs-number">11</span>, <span class="hljs-number">7922572</span>, <span class="hljs-number">7922892</span>&#125;,<br>        &#123;<span class="hljs-number">11</span>, <span class="hljs-number">22</span>, <span class="hljs-number">9054368</span>, <span class="hljs-number">9054537</span>&#125;,<br>        &#123;<span class="hljs-number">22</span>, <span class="hljs-number">33</span>, <span class="hljs-number">10186164</span>, <span class="hljs-number">10186440</span>&#125;,<br>        &#123;<span class="hljs-number">33</span>, <span class="hljs-number">44</span>, <span class="hljs-number">11317960</span>, <span class="hljs-number">11318240</span>&#125;,<br>        &#123;<span class="hljs-number">44</span>, <span class="hljs-number">11</span>, <span class="hljs-number">12449756</span>, <span class="hljs-number">12450038</span>&#125;,<br>        &#123;<span class="hljs-number">11</span>, <span class="hljs-number">22</span>, <span class="hljs-number">13581552</span>, <span class="hljs-number">13581602</span>&#125;,<br>        &#123;<span class="hljs-number">22</span>, <span class="hljs-number">33</span>, <span class="hljs-number">14713348</span>, <span class="hljs-number">14713579</span>&#125;,<br>        &#123;<span class="hljs-number">33</span>, <span class="hljs-number">44</span>, <span class="hljs-number">15845144</span>, <span class="hljs-number">15845189</span>&#125;,<br>        &#123;<span class="hljs-number">44</span>, <span class="hljs-number">11</span>, <span class="hljs-number">16976940</span>, <span class="hljs-number">16977052</span>&#125;,<br>        &#123;<span class="hljs-number">11</span>, <span class="hljs-number">22</span>, <span class="hljs-number">18108736</span>, <span class="hljs-number">18108814</span>&#125;,<br>        &#123;<span class="hljs-number">22</span>, <span class="hljs-number">33</span>, <span class="hljs-number">19240532</span>, <span class="hljs-number">19240500</span>&#125;,<br>        &#123;<span class="hljs-number">33</span>, <span class="hljs-number">44</span>, <span class="hljs-number">20372328</span>, <span class="hljs-number">20372636</span>&#125;,<br>        &#123;<span class="hljs-number">44</span>, <span class="hljs-number">11</span>, <span class="hljs-number">21504124</span>, <span class="hljs-number">21504381</span>&#125;,<br>        &#123;<span class="hljs-number">11</span>, <span class="hljs-number">22</span>, <span class="hljs-number">22635920</span>, <span class="hljs-number">22635950</span>&#125;,<br>        &#123;<span class="hljs-number">22</span>, <span class="hljs-number">33</span>, <span class="hljs-number">23767716</span>, <span class="hljs-number">23767992</span>&#125;,<br>        &#123;<span class="hljs-number">33</span>, <span class="hljs-number">44</span>, <span class="hljs-number">24899512</span>, <span class="hljs-number">24899631</span>&#125;,<br>        &#123;<span class="hljs-number">44</span>, <span class="hljs-number">11</span>, <span class="hljs-number">26031308</span>, <span class="hljs-number">26031402</span>&#125;,<br>        &#123;<span class="hljs-number">11</span>, <span class="hljs-number">22</span>, <span class="hljs-number">27163104</span>, <span class="hljs-number">27163367</span>&#125;,<br>        &#123;<span class="hljs-number">22</span>, <span class="hljs-number">33</span>, <span class="hljs-number">28294900</span>, <span class="hljs-number">28294937</span>&#125;,<br>        &#123;<span class="hljs-number">33</span>, <span class="hljs-number">44</span>, <span class="hljs-number">29426696</span>, <span class="hljs-number">29426748</span>&#125;,<br>        &#123;<span class="hljs-number">44</span>, <span class="hljs-number">11</span>, <span class="hljs-number">30558492</span>, <span class="hljs-number">30558628</span>&#125;,<br>        &#123;<span class="hljs-number">11</span>, <span class="hljs-number">22</span>, <span class="hljs-number">31690288</span>, <span class="hljs-number">31690302</span>&#125;,<br>        &#123;<span class="hljs-number">22</span>, <span class="hljs-number">33</span>, <span class="hljs-number">32822084</span>, <span class="hljs-number">32822192</span>&#125;,<br>        &#123;<span class="hljs-number">33</span>, <span class="hljs-number">44</span>, <span class="hljs-number">33953880</span>, <span class="hljs-number">33953875</span>&#125;,<br>        &#123;<span class="hljs-number">44</span>, <span class="hljs-number">11</span>, <span class="hljs-number">35085676</span>, <span class="hljs-number">35085942</span>&#125;,<br>        &#123;<span class="hljs-number">11</span>, <span class="hljs-number">22</span>, <span class="hljs-number">36217472</span>, <span class="hljs-number">36217409</span>&#125;,<br>        &#123;<span class="hljs-number">22</span>, <span class="hljs-number">33</span>, <span class="hljs-number">37349268</span>, <span class="hljs-number">37349478</span>&#125;,<br>        &#123;<span class="hljs-number">33</span>, <span class="hljs-number">44</span>, <span class="hljs-number">38481064</span>, <span class="hljs-number">38481281</span>&#125;,<br>        &#123;<span class="hljs-number">44</span>, <span class="hljs-number">11</span>, <span class="hljs-number">39612860</span>, <span class="hljs-number">39613168</span>&#125;,<br>        &#123;<span class="hljs-number">11</span>, <span class="hljs-number">22</span>, <span class="hljs-number">40744656</span>, <span class="hljs-number">40744760</span>&#125;,<br>        &#123;<span class="hljs-number">22</span>, <span class="hljs-number">33</span>, <span class="hljs-number">41876452</span>, <span class="hljs-number">41876732</span>&#125;,<br>        &#123;<span class="hljs-number">33</span>, <span class="hljs-number">44</span>, <span class="hljs-number">43008248</span>, <span class="hljs-number">43008497</span>&#125;,<br>        &#123;<span class="hljs-number">44</span>, <span class="hljs-number">11</span>, <span class="hljs-number">44140044</span>, <span class="hljs-number">44140263</span>&#125;,<br>        &#123;<span class="hljs-number">11</span>, <span class="hljs-number">22</span>, <span class="hljs-number">45271840</span>, <span class="hljs-number">45272035</span>&#125;,<br>        &#123;<span class="hljs-number">22</span>, <span class="hljs-number">33</span>, <span class="hljs-number">46403636</span>, <span class="hljs-number">46403677</span>&#125;,<br>        &#123;<span class="hljs-number">33</span>, <span class="hljs-number">44</span>, <span class="hljs-number">47535432</span>, <span class="hljs-number">47535509</span>&#125;,<br>        &#123;<span class="hljs-number">44</span>, <span class="hljs-number">11</span>, <span class="hljs-number">48667228</span>, <span class="hljs-number">48667259</span>&#125;<br>    &#125;;<br><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-type">int</span> v5;<br>    <span class="hljs-type">int</span> v6;<br>     v5 = <span class="hljs-string">&#x27;m&#x27;</span>;<br>     v6 = <span class="hljs-string">&#x27;i&#x27;</span>;<br>     <br>     v5 += <span class="hljs-number">1766746445</span>;<br>     v6 += <span class="hljs-number">1952656716</span>;<br>   <br>    v5 = v5 ^ v6;<br>    v5 = v6;<br><br>    cout &lt;&lt; <span class="hljs-string">&quot;mi&quot;</span>;<br><br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; data_.<span class="hljs-built_in">size</span>(); i++)&#123;<br><br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j = <span class="hljs-number">33</span>;j &lt;<span class="hljs-number">127</span>;j++)&#123;<br>            v6 = j;<br>            <span class="hljs-type">int</span> v5_temp = v5;<br>            v5_temp += data_[i][<span class="hljs-number">0</span>];<br>            v6 += data_[i][<span class="hljs-number">1</span>];<br>            v5_temp += data_[i][<span class="hljs-number">2</span>];<br>            <span class="hljs-keyword">if</span>((v5_temp ^ v6) == data_[i][<span class="hljs-number">3</span>])&#123;<br>                cout &lt;&lt; <span class="hljs-built_in">char</span>(j) ; <br>                v5 = v6;<br>                <span class="hljs-keyword">break</span>;<br>            &#125;<br>            <br>        &#125;<br>        <br><br>    &#125;<br>    <br>    <br><br>&#125;<br></code></pre></td></tr></table></figure><h3 id="剩下的题目之后再写"><a href="#剩下的题目之后再写" class="headerlink" title="剩下的题目之后再写"></a>剩下的题目之后再写</h3>]]></content>
    
    
    <categories>
      
      <category>RE</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>复现KeyHook</title>
    <link href="/2024/05/16/%E5%A4%8D%E7%8E%B0KeyHook/"/>
    <url>/2024/05/16/%E5%A4%8D%E7%8E%B0KeyHook/</url>
    
    <content type="html"><![CDATA[<h1 id="复现《逆向工程核心原理》Hook"><a href="#复现《逆向工程核心原理》Hook" class="headerlink" title="复现《逆向工程核心原理》Hook"></a>复现《逆向工程核心原理》Hook</h1><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>利用Hook，我们可以查看，修改，截断 ‘用户-os-应用程序’ 之间所有的信息<br><img src="/../res/3.1.png" alt="示意图"></p><p>接下来以keyBoard为例，实际操作一下，目的是<strong>向notepad.exe中注入KeyHook.dll实现键盘输入的钩取,并且改写成全局钩子，显示获取到的key</strong></p><h2 id="函数总览"><a href="#函数总览" class="headerlink" title="函数总览"></a>函数总览</h2><h3 id="main"><a href="#main" class="headerlink" title="main"></a>main</h3><p>HookMain.cpp &#x2F;&#x2F;注入函数</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&quot;stdio.h&quot;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&quot;Windows.h&quot;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&quot;conio.h&quot;</span></span><br><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> DLL_NAME <span class="hljs-string">&quot;KeyHook.dll&quot;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> HOOKSTART <span class="hljs-string">&quot;HookStart&quot;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> HOOKSTOP <span class="hljs-string">&quot;HookStop&quot;</span></span><br><br><span class="hljs-function"><span class="hljs-keyword">typedef</span> <span class="hljs-title">void</span><span class="hljs-params">(*FN_HOOKSTART)</span><span class="hljs-params">()</span></span>;<br><span class="hljs-function"><span class="hljs-keyword">typedef</span> <span class="hljs-title">void</span><span class="hljs-params">(*FN_HOOKSTOP)</span><span class="hljs-params">()</span></span>;<br><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>    HMODULE hDll = <span class="hljs-literal">NULL</span>;<br>    FN_HOOKSTART HookStart = <span class="hljs-literal">NULL</span>;<br>    FN_HOOKSTOP HookStop = <span class="hljs-literal">NULL</span>;<br><br>    hDll = <span class="hljs-built_in">LoadLibraryA</span>(DLL_NAME);<br><br>    HookStart = (FN_HOOKSTART)<span class="hljs-built_in">GetProcAddress</span>(hDll, HOOKSTART);<br>    HookStop = (FN_HOOKSTOP)<span class="hljs-built_in">GetProcAddress</span>(hDll, HOOKSTOP);<br><br>    <span class="hljs-built_in">HookStart</span>();<br><br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;press &#x27;q&#x27; to quit this hook procdure&quot;</span>);<br>    <span class="hljs-keyword">while</span> (_getch() != <span class="hljs-string">&#x27;q&#x27;</span>);<br><br>    <span class="hljs-built_in">HookStop</span>();<br><br>    <span class="hljs-built_in">FreeLibrary</span>(hDll);<br><br>    <span class="hljs-keyword">return</span> <span class="hljs-number">1</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="dll"><a href="#dll" class="headerlink" title="dll"></a>dll</h3><p>KeyHook.cpp   &#x2F;&#x2F;dll实现函数</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&quot;stdio.h&quot;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&quot;windows.h&quot;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;iostream&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;fstream&gt;</span></span><br><br><span class="hljs-meta">#<span class="hljs-keyword">define</span> PROCESS_NAME <span class="hljs-string">&quot;notepad.exe&quot;</span></span><br><br>HINSTANCE g_hInstance = <span class="hljs-literal">NULL</span>;<br>HHOOK g_Hook = <span class="hljs-literal">NULL</span>;<br>HWND g_hWnd = <span class="hljs-literal">NULL</span>;<br><br><span class="hljs-function">BOOL WINAPI <span class="hljs-title">DllMain</span><span class="hljs-params">(HINSTANCE hinstDLL, DWORD fdwReason, LPVOID lpvReserved)</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-keyword">switch</span> (fdwReason)<br>    &#123;<br>    <span class="hljs-keyword">case</span> DLL_PROCESS_ATTACH:<br>        g_hInstance = hinstDLL;<br>        <br>        <span class="hljs-keyword">break</span>;<br>    <span class="hljs-keyword">case</span> DLL_PROCESS_DETACH:<br>        <br>        <span class="hljs-keyword">break</span>;<br>    <span class="hljs-keyword">default</span>:<br>        <span class="hljs-keyword">break</span>;<br>    &#125;<br>    <span class="hljs-keyword">return</span> TRUE;<br>&#125;<br><br><span class="hljs-function">LRESULT CALLBACK <span class="hljs-title">KeyboardProc</span><span class="hljs-params">(<span class="hljs-type">int</span> nCode, WPARAM wParam, LPARAM lParam)</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-type">char</span> szPath[MAX_PATH] = &#123; <span class="hljs-number">0</span>, &#125;;<br>    <span class="hljs-type">char</span>* p = <span class="hljs-literal">NULL</span>;<br>    <span class="hljs-keyword">if</span> (nCode &gt;= <span class="hljs-number">0</span>)<br>    &#123;<br>        <span class="hljs-keyword">if</span> (!(lParam &amp; <span class="hljs-number">0x80000000</span>))<br>        &#123;<br>            <span class="hljs-built_in">GetModuleFileNameA</span>(<span class="hljs-literal">NULL</span>, szPath, MAX_PATH);<br>            p = <span class="hljs-built_in">strrchr</span>(szPath, <span class="hljs-string">&#x27;\\&#x27;</span>);<br><br>            <span class="hljs-keyword">if</span> (!_stricmp(p + <span class="hljs-number">1</span>, PROCESS_NAME))<br>            &#123;<br>                <br>                <span class="hljs-keyword">return</span> <span class="hljs-number">1</span>;<br>            &#125;<br>            <br><br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-built_in">CallNextHookEx</span>(g_Hook, nCode, wParam, lParam);<br>&#125;<br><span class="hljs-meta">#<span class="hljs-keyword">ifdef</span> __cplusplus</span><br><span class="hljs-keyword">extern</span> <span class="hljs-string">&quot;C&quot;</span> &#123;<br><span class="hljs-meta">#<span class="hljs-keyword">endif</span> <span class="hljs-comment">// __cplusplus</span></span><br>    __declspec(dllexport) <span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">HookStart</span><span class="hljs-params">()</span></span><br><span class="hljs-function">    </span>&#123;<br>        g_Hook = <span class="hljs-built_in">SetWindowsHookEx</span>(WH_KEYBOARD, KeyboardProc, g_hInstance, <span class="hljs-number">0</span>);<br>    &#125;<br>    __declspec(dllexport) <span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">HookStop</span><span class="hljs-params">()</span></span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-keyword">if</span> (g_Hook)<br>        &#123;<br>            <span class="hljs-built_in">UnhookWindowsHookEx</span>(g_Hook);<br>            g_Hook = <span class="hljs-literal">NULL</span>;<br>        &#125;<br>    &#125;<br><span class="hljs-meta">#<span class="hljs-keyword">ifdef</span> __cplusplus</span><br>&#125;<br><span class="hljs-meta">#<span class="hljs-keyword">endif</span> <span class="hljs-comment">// __cplusplus</span></span><br></code></pre></td></tr></table></figure><h2 id="逐块解释"><a href="#逐块解释" class="headerlink" title="逐块解释"></a>逐块解释</h2><h3 id="dll-1"><a href="#dll-1" class="headerlink" title="dll"></a>dll</h3><p>下面逐块解释一下代码</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs cpp">HINSTANCE g_hInstance = <span class="hljs-literal">NULL</span>;  <span class="hljs-comment">//实例化对象指针</span><br>HHOOK g_Hook = <span class="hljs-literal">NULL</span>; <span class="hljs-comment">//钩子指针</span><br>HWND g_hWnd = <span class="hljs-literal">NULL</span>; <span class="hljs-comment">//窗口指针</span><br><br><span class="hljs-function">BOOL WINAPI <span class="hljs-title">DllMain</span><span class="hljs-params">(HINSTANCE hinstDLL, DWORD fdwReason, LPVOID lpvReserved)</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-comment">// Perform actions based on the reason for calling.</span><br>    <span class="hljs-keyword">switch</span> (fdwReason)<br>    &#123;<br>    <span class="hljs-keyword">case</span> DLL_PROCESS_ATTACH:<br>        g_hInstance = hinstDLL;  <span class="hljs-comment">//初始化</span><br>        <br>        <span class="hljs-keyword">break</span>;<br>    <span class="hljs-keyword">case</span> DLL_PROCESS_DETACH:<br>        <br>        <span class="hljs-keyword">break</span>;<br>    <span class="hljs-keyword">default</span>:<br>        <span class="hljs-keyword">break</span>;<br>    &#125;<br>    <span class="hljs-keyword">return</span> TRUE;<br>&#125;<br></code></pre></td></tr></table></figure><p>这是DLL的程序入口，是一种框架代码，一般的Dll都会这样写。<br>程序会根据fdwReason的值执行不同的函数，fdwReason有四种取值</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs txt">fdwReason 0 DLL_PROCESS_ATTACH  //DLL被加载<br>fdwReason 1 DLL_PROCESS_DETACH  //DLL被卸载<br>fdwReason 2 DLL_THREAD_ATTACH  //创建进程时<br>fdwReason 3 DLL_THREAD_DETACH  //卸载进程时<br></code></pre></td></tr></table></figure><p>当fdwReason为DLL_PROCESS_ATTACH时， lpvReserved为NULL表示动态加载，不为NULL表示静态加载。当fdwReason为DLL_PROCESS_DETACH时, lpvReserved为NULL表示FreeLibrary被调用或DLL加载失败，不为NULL表示进程正在终止。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-function">LRESULT CALLBACK <span class="hljs-title">KeyboardProc</span><span class="hljs-params">(<span class="hljs-type">int</span> nCode, WPARAM wParam, LPARAM lParam)</span></span><br><span class="hljs-function"></span>&#123;<br>    <span class="hljs-comment">//KeyboardProc 是一个回调函数，会作为SetWindowsHookEx的参数，具体处理Hook到的信息</span><br>    <span class="hljs-comment">//ncode参数决定如何处理这个消息</span><br>    <span class="hljs-comment">//wParam 以这个程序为例，存放虚拟键码</span><br>    <span class="hljs-comment">//lParam 存在一些标志，如按下和取消等等</span><br>    <span class="hljs-type">char</span> szPath[MAX_PATH] = &#123; <span class="hljs-number">0</span>, &#125;;<br>    <span class="hljs-type">char</span>* p = <span class="hljs-literal">NULL</span>;<br>    <span class="hljs-keyword">if</span> (nCode &gt;= <span class="hljs-number">0</span>)<br>    &#123;<br>        <span class="hljs-keyword">if</span> (!(lParam &amp; <span class="hljs-number">0x80000000</span>))  <span class="hljs-comment">//lParam的31bit代表是否按下</span><br>        &#123;<br>            <span class="hljs-built_in">GetModuleFileNameA</span>(<span class="hljs-literal">NULL</span>, szPath, MAX_PATH);<br>            p = <span class="hljs-built_in">strrchr</span>(szPath, <span class="hljs-string">&#x27;\\&#x27;</span>);<br>            <span class="hljs-comment">//拿到进程名字，这个函数是定位到字符出现的最后一个位置</span><br>            <span class="hljs-keyword">if</span> (!_stricmp(p + <span class="hljs-number">1</span>, PROCESS_NAME))<br>            &#123;<br>                <br>                <span class="hljs-keyword">return</span> <span class="hljs-number">1</span>;<br>            &#125;<br>            <br><br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-built_in">CallNextHookEx</span>(g_Hook, nCode, wParam, lParam);<br>&#125;<br></code></pre></td></tr></table></figure><p>这个函数将作为SetWindowsHookEx函数的一个参数，负责处理Hook到的消息，通俗的来讲，你要对截获的信息进行处理，可以是舍弃，变更，修改等等，所以要写一个函数来实现，对于这个程序，功能为判断这个输入是否是在notepad.exe进程中，如果是就不向下传递，如果不是就调用CallNextHookEx(),将信息传递下去。</p><p>ncode参数</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs txt">小于0：必须调用CallNextHookEx函数传递消息<br>0：表示参数wParam和lParam 包含关于虚拟键值相关信息<br>3：在值为0的基础上，表示这个消息被某个进程用PeekMessage查看过<br></code></pre></td></tr></table></figure><p>也就是当ncode&gt;0的时候，可以对进行操作，否则只能传递钩子</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">ifdef</span> __cplusplus</span><br><span class="hljs-keyword">extern</span> <span class="hljs-string">&quot;C&quot;</span> &#123;<br><span class="hljs-meta">#<span class="hljs-keyword">endif</span> <span class="hljs-comment">// __cplusplus</span></span><br>    __declspec(dllexport) <span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">HookStart</span><span class="hljs-params">()</span></span><br><span class="hljs-function">    </span>&#123;<br>        g_Hook = <span class="hljs-built_in">SetWindowsHookEx</span>(WH_KEYBOARD, KeyboardProc, g_hInstance, <span class="hljs-number">0</span>);<br>    &#125;<br>    __declspec(dllexport) <span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">HookStop</span><span class="hljs-params">()</span></span><br><span class="hljs-function">    </span>&#123;<br>        <span class="hljs-keyword">if</span> (g_Hook)<br>        &#123;<br>            <span class="hljs-built_in">UnhookWindowsHookEx</span>(g_Hook);<br>            g_Hook = <span class="hljs-literal">NULL</span>;<br>        &#125;<br>    &#125;<br><span class="hljs-meta">#<span class="hljs-keyword">ifdef</span> __cplusplus</span><br>&#125;<br><span class="hljs-meta">#<span class="hljs-keyword">endif</span> <span class="hljs-comment">// __cplusplus</span></span><br></code></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">ifdef</span> __cplusplus</span><br><span class="hljs-keyword">extern</span> <span class="hljs-string">&quot;C&quot;</span> &#123;<br><span class="hljs-meta">#<span class="hljs-keyword">endif</span> <span class="hljs-comment">// __cplusplus</span></span><br>...<br><span class="hljs-meta">#<span class="hljs-keyword">ifdef</span> __cplusplus</span><br>&#125;<br><span class="hljs-meta">#<span class="hljs-keyword">endif</span> <span class="hljs-comment">// __cplusplus</span></span><br></code></pre></td></tr></table></figure><p>有些函数只能在c语言下解析，但是dll源文件是cpp，这个就是告诉编译器什么时候再c语言下解析，什么时候再cpp下解析。</p><p>__declspec(dllexport) 标志导出函数</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-function">HHOOK <span class="hljs-title">SetWindowsHookExA</span><span class="hljs-params">(</span></span><br><span class="hljs-params"><span class="hljs-function">  [in] <span class="hljs-type">int</span>       idHook,  <span class="hljs-comment">//标识钩子的种类 WH_KEYBOARD为键盘钩子</span></span></span><br><span class="hljs-params"><span class="hljs-function">  [in] HOOKPROC  lpfn,    <span class="hljs-comment">//函数指针，这个参数填之前写好的回调函数</span></span></span><br><span class="hljs-params"><span class="hljs-function">  [in] HINSTANCE hmod,    <span class="hljs-comment">//实例</span></span></span><br><span class="hljs-params"><span class="hljs-function">  [in] DWORD     dwThreadId  <span class="hljs-comment">//如果当前的钩子进程与现存的线程相关，那么它的值就是0</span></span></span><br><span class="hljs-params"><span class="hljs-function">)</span></span>;<br></code></pre></td></tr></table></figure><h3 id="main-1"><a href="#main-1" class="headerlink" title="main"></a>main</h3><p>主函数较为简单<br>LoadLibraryA 加载dll<br>GetProcAddress 获取dll中的函数地址</p><h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><p>测试环境 : win10,xp</p><p>看到网上说win10环境下会出现问题，但是我自己试的的时候好像没什么问题。两种测试环境大同小异，win10要编译成64位可执行程序，xp编译成32位可执行程序即可。我这里使用g++编译器</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs stylus">g++ -shared ./KeyHook<span class="hljs-selector-class">.cpp</span> -o KeyHook<span class="hljs-selector-class">.dll</span> <span class="hljs-comment">// -shared 表示要生成dll文件，-o 后跟dll的名字</span><br><br>g++ ./KeyHook<span class="hljs-selector-class">.dll</span> hookMain<span class="hljs-selector-class">.cpp</span> -o KeyHook<span class="hljs-selector-class">.exe</span> <span class="hljs-comment">//生成exe文件</span><br><br></code></pre></td></tr></table></figure><p><img src="/../res/3.3.png" alt="效果"> </p><p>生成这两个文件，说明成功</p><p>先运行exe文件，后打开notepad</p><p><img src="/../res/3.4.png" alt="打开notepad"><br>此时键盘输入无效，打开进程管理工具发现KeyHook.dll成功注入</p><p><img src="/../res/3.5.png" alt="注入成功"></p><p>xp 平台测试与win10类似，gcc要用32位版本，而且似乎xp并不支持在当前路劲打开cmd，要用绝对路径。</p><h2 id="全局钩子和显示key"><a href="#全局钩子和显示key" class="headerlink" title="全局钩子和显示key"></a>全局钩子和显示key</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-keyword">if</span> (!_stricmp(p + <span class="hljs-number">1</span>, <span class="hljs-string">&quot;conhost.exe&quot;</span>))<br>            &#123;<br>                <span class="hljs-keyword">return</span> <span class="hljs-built_in">CallNextHookEx</span>(g_Hook, nCode, wParam, lParam);<br>                <span class="hljs-keyword">return</span> <span class="hljs-number">1</span>;<br>            &#125;<br>            <span class="hljs-keyword">else</span>&#123;<br>                <span class="hljs-built_in">GetKeyNameTextA</span>(lParam,str,<span class="hljs-number">50</span>);   <span class="hljs-comment">//定义一个str存放key</span><br>            &#125;<br></code></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">GetKeyNameTextA</span><span class="hljs-params">(</span></span><br><span class="hljs-params"><span class="hljs-function">  [in]  LONG  lParam,</span></span><br><span class="hljs-params"><span class="hljs-function">  [out] LPSTR lpString,</span></span><br><span class="hljs-params"><span class="hljs-function">  [in]  <span class="hljs-type">int</span>   cchSize</span></span><br><span class="hljs-params"><span class="hljs-function">)</span></span>;<br></code></pre></td></tr></table></figure><p>开始以为参数是存放在wParam中，一直没有成功。</p><p><img src="/../res/3.6.png" alt="在任何位置输入都会被拦截"></p>]]></content>
    
    
    <categories>
      
      <category>RE</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>sql注入简单防御 -- 完善cpp课程设计</title>
    <link href="/2024/05/14/%E5%9F%BA%E4%BA%8E/"/>
    <url>/2024/05/14/%E5%9F%BA%E4%BA%8E/</url>
    
    <content type="html"><![CDATA[<p>之前用QT写了(抄的)cpp课程设计-图书管理系统,在sql实现部分没有做任何的防御措施，导致任何一个输入都是注入点，所以想着完善一下，起码做一些简单的防御。</p><p><img src="/../res/2_1.png" alt="初始登陆界面"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs 参数">1<br>&#x27; or 1=1 --<br></code></pre></td></tr></table></figure><p>登陆成功</p><p>源代码</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs cpp">QString  sql = <span class="hljs-built_in">QString</span>(<span class="hljs-string">&quot;select * from user where username=&#x27;%1&#x27; and password = &#x27;%2&#x27;&quot;</span>).<span class="hljs-built_in">arg</span>(strUser).<span class="hljs-built_in">arg</span>(strPasswd);<br>    <span class="hljs-function">QSqlQuery <span class="hljs-title">q</span><span class="hljs-params">(sql,m_db)</span></span>;<br><br>    <span class="hljs-keyword">if</span>(!q.<span class="hljs-built_in">next</span>())&#123;<br>        <span class="hljs-built_in">qDebug</span>() &lt;&lt; q.<span class="hljs-built_in">lastError</span>().<span class="hljs-built_in">text</span>();<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br></code></pre></td></tr></table></figure><p>拼接后</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">from</span> <span class="hljs-keyword">user</span> <span class="hljs-keyword">where</span> username<span class="hljs-operator">=</span><span class="hljs-string">&#x27;1&#x27;</span> <span class="hljs-keyword">and</span> password <span class="hljs-operator">=</span> <span class="hljs-string">&#x27;&#x27;</span> <span class="hljs-keyword">or</span> <span class="hljs-number">1</span> <span class="hljs-operator">=</span> <span class="hljs-number">1</span> <span class="hljs-comment">-- &#x27;</span><br></code></pre></td></tr></table></figure><p>加入正则表达式</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-function">QRegularExpression <span class="hljs-title">regExp</span><span class="hljs-params">(<span class="hljs-string">&quot;^[A-Za-z0-9]+$&quot;</span>)</span></span>;<br>...<br> QRegularExpressionMatch mat = regExp.<span class="hljs-built_in">match</span>(userName);  <span class="hljs-comment">//match函数返回的是一个QRegularExpressionMatch类</span><br>    <span class="hljs-keyword">if</span>(!mat.<span class="hljs-built_in">hasMatch</span>())&#123;<br>        QMessageBox::<span class="hljs-built_in">warning</span>(<span class="hljs-literal">nullptr</span>,<span class="hljs-string">&quot;警告&quot;</span>,<span class="hljs-string">&quot;只能输入数字，字母&quot;</span>,QMessageBox::Ok);<br>        <span class="hljs-keyword">this</span>-&gt;<span class="hljs-built_in">setResult</span>(<span class="hljs-number">2</span>);<br>        <span class="hljs-keyword">return</span> ;<br>    &#125;<br><br>    <span class="hljs-keyword">if</span>(!regExp.<span class="hljs-built_in">match</span>(passWord).<span class="hljs-built_in">hasMatch</span>())&#123;<br>        QMessageBox::<span class="hljs-built_in">warning</span>(<span class="hljs-literal">nullptr</span>,<span class="hljs-string">&quot;警告&quot;</span>,<span class="hljs-string">&quot;只能输入数字，字母&quot;</span>,QMessageBox::Ok);<br>        <span class="hljs-keyword">this</span>-&gt;<span class="hljs-built_in">setResult</span>(<span class="hljs-number">2</span>);<br>        <span class="hljs-keyword">return</span> ;<br>    &#125;<br></code></pre></td></tr></table></figure><p>由于不太懂QT的语法，而且网上好多都是基于QRegExp类的正则匹配，新版本的QT似乎已经不再QRegExp类了，取而代之是QRegularExpressionMatch用所以花了一些时间阅读函数手册。</p><p><img src="/../res/2.2.png" alt="再次利用之前的SQL注入"></p><p>利用正则表达式限制输入为数字和字母，能够有效的防御一些基础的sql注入，复杂一些的攻击方式和防御手段有时间再补充吧</p>]]></content>
    
    
    <categories>
      
      <category>WEB</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>Radare2--linux系统下的动态调试工具</title>
    <link href="/2024/05/12/r2-%E4%BD%BF%E7%94%A8/"/>
    <url>/2024/05/12/r2-%E4%BD%BF%E7%94%A8/</url>
    
    <content type="html"><![CDATA[<p>需要进行linux文件的动态调试(其实是懒得分析静态逻辑),但是linux平台不晓得有没有什么特别好的调试工具,所以学习一下Radare2,顺便记录指令，方便以后查阅</p><h2 id="让r2自动分析可执行文件"><a href="#让r2自动分析可执行文件" class="headerlink" title="让r2自动分析可执行文件"></a>让r2自动分析可执行文件</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">r2 -A ./fileName<br></code></pre></td></tr></table></figure><h2 id="获取一些基本的二进制信息"><a href="#获取一些基本的二进制信息" class="headerlink" title="获取一些基本的二进制信息"></a>获取一些基本的二进制信息</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">iI<br></code></pre></td></tr></table></figure><h2 id="查看导入和导出函数"><a href="#查看导入和导出函数" class="headerlink" title="查看导入和导出函数"></a>查看导入和导出函数</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">ii    //查看导入函数<br>iE    //查看到处函数<br></code></pre></td></tr></table></figure><h2 id="查看函数"><a href="#查看函数" class="headerlink" title="查看函数"></a>查看函数</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">afl       // <span class="hljs-keyword">function</span> list<br></code></pre></td></tr></table></figure><h2 id="交叉引用"><a href="#交叉引用" class="headerlink" title="交叉引用"></a>交叉引用</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">axt  函数名<br>axt 地址<br></code></pre></td></tr></table></figure><h2 id="寻找定位"><a href="#寻找定位" class="headerlink" title="寻找定位"></a>寻找定位</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">s 地址或函数名<br></code></pre></td></tr></table></figure><h2 id="十六进制视图"><a href="#十六进制视图" class="headerlink" title="十六进制视图"></a>十六进制视图</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">px<br></code></pre></td></tr></table></figure><h2 id="反汇编"><a href="#反汇编" class="headerlink" title="反汇编"></a>反汇编</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">s 函数名   //找到函数 或地址<br>pdf <br></code></pre></td></tr></table></figure><h2 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">iz   //显示程序中的字符串<br></code></pre></td></tr></table></figure><h2 id="可视模式"><a href="#可视模式" class="headerlink" title="可视模式"></a>可视模式</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">VV <br></code></pre></td></tr></table></figure><p><strong>目前为止，还都只是静态调试，我把这些称为鸡肋命令，因为ida完全可以替代，接下来才是关键</strong></p><h2 id="启动调试器"><a href="#启动调试器" class="headerlink" title="启动调试器"></a>启动调试器</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash">-d //启动调试器<br>db //添加断点<br>dbi //查看断点<br>dc //开始运行<br>dbt //查看堆栈<br>drr //转存寄存器<br></code></pre></td></tr></table></figure><h2 id="反编译"><a href="#反编译" class="headerlink" title="反编译"></a>反编译</h2><p>需要下载一个插件r2dec</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">r2pm install r2dec<br>r2pm -l //查看下载的插件<br>pdda   //反编译指令<br><br></code></pre></td></tr></table></figure><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>总的来说基本能实现x64dbg功能，但是命令行会有一些不方便,虽然ida也支持远程动态调试，但我总是配置不好，也不太懂附加进程调试，所以先用一下r2试一下</p>]]></content>
    
    
    <categories>
      
      <category>RE</category>
      
    </categories>
    
    
  </entry>
  
  
  
  
</search>
